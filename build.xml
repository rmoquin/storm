<project name="storm">
  <property name="src" location="src"/>
  <property name="cljsrc" location="${src}/clj"/>
  <property name="target" location="target"/>
  <property name="build" location="${target}/classes"/>
  
  <target name="storm-compile"
          description="Compile Storm Clojure sources.">
    <!-- Clojure doesn't seem smart enough to be able to compile if clj files aren't in a certain order, so manually list them below.-->
    <!--
    <fileset id="clojure.set" dir="${cljsrc}" includes="**/*.clj" />
    <pathconvert pathsep=" " property="clojure.files" refid="clojure.set">
      <packagemapper from="${cljsrc}${file.separator}*.clj" to="*"/>
    </pathconvert>
    <echo>${clojure.files}</echo>
    -->
    <java classname="clojure.lang.Compile"
          classpath="${maven.compile.classpath}"
          failonerror="true"
          fork="true">
      <sysproperty key="clojure.compile.path" value="${build}"/>
      <!-- Left in, in the case of building against jzmq and it's native libraries -->
      <jvmarg line="-Djava.library.path=${project.build.directory}${file.separator}lib"/>
      <!--<sysproperty key="clojure.compiler.elide-meta" value="[:doc :file :line :added]"/>-->
      <!--<sysproperty key="clojure.compiler.disable-locals-clearing" value="true"/>-->
      <!-- <sysproperty key="clojure.compile.warn-on-reflection" value="true"/> -->
      <arg line="backtype.storm.LocalCluster backtype.storm.LocalDRPC backtype.storm.bootstrap backtype.storm.clojure backtype.storm.cluster backtype.storm.command.activate backtype.storm.command.config-value backtype.storm.command.deactivate backtype.storm.command.dev-zookeeper backtype.storm.command.kill-topology backtype.storm.command.list backtype.storm.command.rebalance backtype.storm.command.shell-submission backtype.storm.config backtype.storm.daemon.acker backtype.storm.daemon.common backtype.storm.daemon.drpc backtype.storm.daemon.executor backtype.storm.daemon.nimbus backtype.storm.daemon.supervisor backtype.storm.daemon.task backtype.storm.daemon.worker backtype.storm.disruptor backtype.storm.event backtype.storm.log backtype.storm.messaging.loader backtype.storm.messaging.local backtype.storm.messaging.protocol backtype.storm.messaging.zmq backtype.storm.process-simulator backtype.storm.scheduler.DefaultScheduler backtype.storm.scheduler.EvenScheduler backtype.storm.stats backtype.storm.testing backtype.storm.testing4j backtype.storm.thrift backtype.storm.timer backtype.storm.tuple backtype.storm.ui.core backtype.storm.ui.helpers backtype.storm.util backtype.storm.zookeeper storm.trident.testing zilch.mq"/>
    </java>
  </target>
</project>
